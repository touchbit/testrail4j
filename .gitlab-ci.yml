include:
- "https://gitlab.com/TouchBIT/testrail4j/raw/add.testrail.docker.compose/.integration.yml"
#- "https://gitlab.com/TouchBIT/testrail4j/raw/master/.integration.yml"

variables:
  SONAR_ARGS: "-Dsonar.gitlab.commit_sha=${CI_COMMIT_SHA} -Dsonar.gitlab.ref_name=${CI_COMMIT_REF_NAME}"

Build modules:
  stage: build
  tags:
    - touchbit-shell
  script:
    # do not use -Dmaven.test.skip=true
    - make install
    - mv integration/target/Corvus.jar Corvus.jar
  artifacts:
    paths:
      - Corvus.jar
    expire_in: 30 days

TR migrations:
  extends: .docker_image_build_push
  variables:
    REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/migration:latest"
    DOCKERFILE: ".indirect/migration.dockerfile"

TR testrail:
  extends: .docker_image_build_push
  variables:
    REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/testrail:latest"
    DOCKERFILE: ".indirect/testrail.dockerfile"

TR fpm:
  extends: .docker_image_build_push
  variables:
    REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/fpm:latest"
    DOCKERFILE: ".indirect/fpm.dockerfile"

JUnit:
  stage: test
  tags:
    - touchbit-shell
  script:
    # do not use -Dmaven.test.skip=true
    - mvn test
  artifacts:
    when: always
    expire_in: 30 day
    paths:
      - "*/target/reports"

Integration:
  dependencies:
   - Build modules
  script:
    - java -jar Corvus.jar --artifacts-url "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/file/"
  artifacts:
    when: always
    paths:
      - logs
    expire_in: 30 days

Sonar review:
  stage: verify
  dependencies:
    - JUnit
  tags:
    - touchbit-shell
  script:
    - >
      if [ "$CI_BUILD_REF_NAME" == "master" ]; then
        mvn compile sonar:sonar -Dsonar.login=$SONAR_LOGIN $SONAR_ARGS
      else
        mvn compile sonar:sonar -Dsonar.login=$SONAR_LOGIN $SONAR_ARGS -Dsonar.analysis.mode=preview
      fi

Deploy Snapshot:
  stage: deploy
  tags:
    - touchbit-shell
  except:
    - tags
  when: manual
  script:
    - TR4J_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
    - SNAPSHOT_TR4J_VERSION=${TR4J_VERSION}-SNAPSHOT
    - make ver ${SNAPSHOT_TR4J_VERSION}
    - make deploy
    - "curl -X POST \"https://api.telegram.org/bot$BABBLER_TOKEN/sendMessage?chat_id=$TELEGRAM_TOUCHBIT_CI_CD_CHAT_ID&disable_notification=true&parse_mode=Markdown&text=*TestRail4J*%0ANew version deployed: %5B${SNAPSHOT_TR4J_VERSION}%5D%28https://touchbit.org/repository/org/touchbit/testrail4j/testrail4j/${SNAPSHOT_TR4J_VERSION}/%29\""

Deploy TestRail4J:
  stage: deploy
  tags:
    - touchbit-shell
  before_script:
    - make ver $CI_COMMIT_TAG
    - mvn dependency:purge-local-repository@local-buggy
    - mvn dependency:get@current-version && CHECK_RESULT=$(echo $?) || CHECK_RESULT=$(echo $?)
    - >
      if [ "${CHECK_RESULT}" != 1 ]; then
          if [[ "${CI_COMMIT_MESSAGE,,}" = *"force deploy"* ]]; then
              echo "Force deploy tag version: ${CI_COMMIT_TAG}";
          else
              TR4J_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
              echo "[ERROR] The current version of TestRail4J ($TR4J_VERSION) already exists in the TouchBIT repository"
              echo "To set the new version, use the command: 'mvn versions:set -DnewVersion=<new version>'"
              echo "Versioning rules: https://semver.org/spec/v2.0.0-rc.2.html"
              false
          fi
      fi
  only:
    - tags
  script:
    - make ver $CI_COMMIT_TAG
    # do not use -Dmaven.test.skip=true
    - make deploy
    - TR4J_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
    - "curl -X POST \"https://api.telegram.org/bot$BABBLER_TOKEN/sendMessage?chat_id=$TELEGRAM_TOUCHBIT_CI_CD_CHAT_ID&disable_notification=false&parse_mode=Markdown&text=*TestRail4J*%0ANew version deployed: %5B${TR4J_VERSION}%5D%28https://touchbit.org/repository/org/touchbit/testrail4j/testrail4j/${TR4J_VERSION}/%29\""